<?xml version="1.0" encoding="ASCII"?>
<forth xmlns="http://forth.org.ru/ForthML/">

<slot>
  process-info
  startup-info
  flags
</slot>

<slot2>
  application
  commandline
  directory
  environment
</slot2>

<comment>
  The 'application' should be a full or a partial pathname (or NULL).
  The function will not use the search path. This parameter must
  include the file name extension; no default extension is assumed.
</comment>


<def name="p-handle"  ds=" -- h ">  process-info hProcess     T@ </def>
<def name="t-handle"  ds=" -- h ">  process-info hThread      T@ </def>
<def name="p-id"      ds=" -- id "> process-info dwProcessId  T@ </def>
<def name="t-id"      ds=" -- id "> process-info dwThreadId   T@ </def>

<comment>
  When it is used in WineHQ and creates a Linux process, p-handle and t-handle remain 0.
  See: https://bugs.winehq.org/show_bug.cgi?id=18335
</comment>

<def name="exitcode" ds=" -- code ">
  p-handle <unless> 0 <exit/></unless>
  p-handle PROCESS-EXITCODE THROW
</def>

<def name="create-process" ds=" -- ior ">
  process-info
  startup-info
  directory     ENSURE-ASCIIZ-R DROP
  environment   ENSURE-ASCIIZ-R DROP
  flags <rem> The flags that control the priority class and the creation of the process </rem>
  TRUE  <rem> inherit handles </rem>
  0 0   <rem> ProcessAttributes ThreadAttributes </rem>
  commandline   ENSURE-ASCIIZ-R DROP
  application   ENSURE-ASCIIZ-R DROP
  CreateProcessA ERR
</def>


<def name="flags+!" ds=" flag -- ">
  flags OR flags!
</def>

<def name="startup-flags+!" ds=" flag -- ">
  startup-info dwFlags DUP >R T@ OR R> T!
</def>

<def name="winshow!" ds=" flag -- ">
  <rem> 0 for hide, 1 for normal </rem>
  startup-info wShowWindow T!
  STARTF_USESHOWWINDOW startup-flags+!
</def>

<def name="precept-window-hidden"   ds=" -- "> 0 winshow! </def>
<def name="precept-console-new"     ds=" -- "> CREATE_NEW_CONSOLE flags+! </def>
<def name="precept-console-no"      ds=" -- "> CREATE_NO_WINDOW   flags+! </def>
<def name="precept-suspended"       ds=" -- "> CREATE_SUSPENDED   flags+! </def>

<def name="handles" ds=" -- in out err ">
  startup-info hStdInput  T@
  startup-info hStdOutput T@
  startup-info hStdError  T@
</def>

<def name="handles!" ds=" in out err -- ">
  startup-info hStdError  T!
  startup-info hStdOutput T!
  startup-info hStdInput  T!
</def>

<def name="assume-handles-std" ds=" in out err -- ">
  handles!
  STARTF_USESTDHANDLES startup-flags+!
</def>

<g><rem> TODO: move to a library #maybe </rem>

<def name="close-handle"  ds=" h|0 -- ">
  DUP <if> CLOSE-FILE THROW <exit/></if> DROP
</def>

<def name="3DISTINCTZ" ds=" x3 x2 x1 -- x3|0 x2|0 x1|0 ">
  3DUP TUCK <rem> 321 31 21 </rem>
  = <if> = <if> 2DROP 0 0 <exit/></if>
                 DROP 0   <exit/></if>
         = <if>  DROP 0   <exit/></if>
  >R 2DUP = <if> DROP 0          </if> R>
</def>
</g>

<def name="close-handles-std" ds=" -- ">
  handles 3DISTINCTZ
  close-handle close-handle close-handle
  0 0 0 handles!
</def>

<def name="wait" ds=" -1|u -- flag ">
  <rem> flag is 0 if the timeout exceeded </rem>
  p-handle SWAP Wait
</def>

<def name="exitcode-sure" ds=" -- ior ">
  10000 wait DROP <rem> prevent STILL_ACTIVE (259)  "exit code" </rem>
  exitcode
</def>

<def name="clear" ds=" -- ">
  startup-info <if>
    startup-info /STARTUPINFO
    2DUP ERASE SWAP T!
  </if>

  process-info <if>
    p-handle close-handle
    t-handle close-handle
    process-info /PROCESS_INFORMATION ERASE
  </if>

  0 flags!
  0. application!
  0. commandline!
  0. directory!
  0. environment!
</def>

<handler event="cleanup"> clear </handler>

<handler event="shutdown">
  clear
  startup-info <if> startup-info FREE THROW 0 startup-info! </if>
  process-info <if> process-info FREE THROW 0 process-info! </if>
</handler>

<handler event="startup">
  /STARTUPINFO          ALLOCATE THROW startup-info!
  /PROCESS_INFORMATION  ALLOCATE THROW process-info!
  clear
</handler>


<def name="execute-dir-timeout" ds=" d-txt-commandline d-txt-directory timeout-ms -- result ior ">
  commandline NIP <if> clear </if>
  >R directory! commandline! R>
  create-process DUP <if><exit/></if> DROP
  wait <if> exitcode 0 clear <exit/></if>
  0 259 <rem> STILL_ACTIVE </rem>
  <rem> leave p-handle open </rem>
</def>

<def name="execute" ds=" d-txt-commandline -- result ior ">
  0 0 -1 execute-dir-timeout
</def>

</forth>
